{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-02T23:27:43.807Z",
    "end": "2022-06-02T23:28:02.926Z",
    "duration": 533,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "263e305b-f48c-4ec0-9e10-57c85189a072",
      "title": "",
      "fullFile": "cypress/integration/Pokenew/tests/api_pokenew.spec.js",
      "file": "cypress/integration/Pokenew/tests/api_pokenew.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "673d6d36-c1ed-4864-bdf2-ff7baf75a141",
          "title": "POST Pokenew",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create new Pokémon",
              "fullTitle": "POST Pokenew Create new Pokémon",
              "timedOut": null,
              "duration": 274,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "POSTPokenew.addPokenew().should(response => {\n  idNew = response.body.newPoke._id;\n  expect(response.status).to.eq(200);\n  expect(response.body).to.be.not.null;\n  expect(response.body.newPoke.name).to.eq('Mega Rampardos Test backend');\n});",
              "err": {},
              "uuid": "e1fdbc2d-bf0d-435b-808a-d455220beea5",
              "parentUUID": "673d6d36-c1ed-4864-bdf2-ff7baf75a141",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "List all new Pokémons",
              "fullTitle": "POST Pokenew List all new Pokémons",
              "timedOut": null,
              "duration": 50,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "GETPokenew.allPokenew().should(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body).to.be.not.null;\n});",
              "err": {},
              "uuid": "4cc46d52-6927-45dc-ad95-6fb283bd4cd1",
              "parentUUID": "673d6d36-c1ed-4864-bdf2-ff7baf75a141",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create and change Pokémon",
              "fullTitle": "POST Pokenew Create and change Pokémon",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "PUTPokenew.updatePokenew(idNew).should(resUpdate => {\n  expect(resUpdate.status).to.eq(200);\n  expect(resUpdate.body).to.be.not.null;\n  expect(JSON.stringify(resUpdate.body)).to.eq('{\"message\":\"Pokémon updated successfully!\"}');\n});",
              "err": {},
              "uuid": "8d542d59-9b7e-4d24-901a-68fb399fe606",
              "parentUUID": "673d6d36-c1ed-4864-bdf2-ff7baf75a141",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create and Delete Pokémon",
              "fullTitle": "POST Pokenew Create and Delete Pokémon",
              "timedOut": null,
              "duration": 48,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "DELPokenew.delPokenew(idNew).should(resDelete => {\n  expect(resDelete.status).to.eq(200);\n  expect(resDelete.body).to.be.not.null;\n  expect(JSON.stringify(resDelete.body)).to.eq('{\"message\":\"Pokémon successfully deleted!\"}');\n});",
              "err": {},
              "uuid": "338fb2ea-3d5a-447d-8e6e-4e8c5483423a",
              "parentUUID": "673d6d36-c1ed-4864-bdf2-ff7baf75a141",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1fdbc2d-bf0d-435b-808a-d455220beea5",
            "4cc46d52-6927-45dc-ad95-6fb283bd4cd1",
            "8d542d59-9b7e-4d24-901a-68fb399fe606",
            "338fb2ea-3d5a-447d-8e6e-4e8c5483423a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 533,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/report/mochawesome-report",
        "reportFilename": "report",
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "6.2.0"
    }
  }
}